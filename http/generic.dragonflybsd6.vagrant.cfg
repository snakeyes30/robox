
HOSTNAME=dragonflybsd6.localdomain

# Not sure if these options apply to DragonFly, but keeping them anyways.
FETCH_RETRY=5
FETCH_TIMEOUT=30
export nonInteractive="YES"

if [ -e /dev/nvme0 ]; then
  DISK=nvme0
elif [ -e /dev/vtbd0 ]; then
  DISK=vtbd0
elif ] -e /dev/vbd0 ]; then
  DISK=vbd0
elif [ -e /dev/ada0 ]; then
  DISK=ada0
elif [ -e /dev/ad0 ]; then
  DISK=ad0
elif [ -e /dev/da0 ]; then
  DISK=da0
elif [ -e /dev/ad0 ]; then
  DISK=ad0
else
  echo "ERROR: There is no disk available for installation" >&2
  sysctl kern.disks >&2
  exit 1
fi

dd if=/dev/zero of="/dev/${DISK}" bs=32k count=16 &&
    fdisk -IB "$DISK" &&
    disklabel64 -r -w "${DISK}s1" auto &&
    disklabel64 -B "${DISK}s1" &&
    disklabel64 "${DISK}s1" > /tmp/labels

cat <<-EOF >> /tmp/labels
a: 768m 0 4.2BSD
b: 2g * swap
d: * * HAMMER2
EOF

disklabel64 -R "${DISK}s1" /tmp/labels &&
    newfs "/dev/${DISK}s1a" &&
    newfs_hammer2 -L ROOT "/dev/${DISK}s1d" &&
    mount "/dev/${DISK}s1d" /mnt &&
    mkdir /mnt/boot &&
    mount "/dev/${DISK}s1a" /mnt/boot &&
    mkdir /mnt/usr &&
    mkdir /mnt/var &&
    mkdir /mnt/tmp &&
    mkdir /mnt/home &&
    mkdir /mnt/usr/obj &&
    mkdir /mnt/var/tmp &&
    mkdir /mnt/var/crash &&
    chmod 1777 /mnt/tmp &&
    chmod 1777 /mnt/var/tmp &&
    cpdup -o /boot /mnt/boot &&
    cpdup -o / /mnt &&
    cpdup -o /usr /mnt/usr &&
    cpdup -o /usr/local/etc /mnt/usr/local/etc &&
    cpdup -o /var /mnt/var &&
    cpdup -i0 /etc.hdd /mnt/etc &&
    chflags -R nohistory /mnt/tmp &&
    chflags -R nohistory /mnt/var/tmp &&
    chflags -R nohistory /mnt/var/crash &&
    chflags -R nohistory /mnt/usr/obj &&
    rm -rf /mnt/etc.hdd

# According to the install guide we should use serno/SERIALNUMOFDISK.s1PARTLETTER 
# instead of DISKNAMEs1PARTLETTER. The change would go in the fstab file, and in 
# /boot/loader.conf with the vfs.root.mountfrom param, like so:
# vfs.root.mountfrom="hammer2:serno/QM00001.s0"

cat <<-EOF > /mnt/etc/fstab
# Device                Mount           Type           Options     Dump    Pass #
/dev/${DISK}s1d         /               hammer2        rw          1       1
/dev/${DISK}s1a         /boot           ufs            rw          1       1
/dev/${DISK}s1b         none            swap           sw          0       0
proc                    /proc           procfs         rw          0       0
EOF
 
cat <<-EOF > /mnt/boot/loader.conf
kernel_options=""
autoboot_delay="1"
vfs.root.mountfrom="hammer2:${DISK}s1d"
EOF

INTERFACE=$(route get default | awk '/interface/ { print $2 }')

cat <<-EOF > /mnt/etc/rc.conf
ifconfig_DEFAULT="DHCP"
ifconfig_rl0="DHCP"
ifconfig_em0="DHCP"
ifconfig_de0="DHCP"
ifconfig_vtnet0="DHCP"
ifconfig_${INTERFACE}="DHCP"
ipv6_network_interfaces="none"
sshd_enable="YES"
dntpd_enable="YES"
hostname="${HOSTNAME}"
dumpdev="/dev/${DISK}s1b"
EOF

cat <<-EOF > /mnt/etc/resolv.conf
nameserver 4.2.2.1
nameserver 4.2.2.2
nameserver 208.67.220.220
EOF

[ ! -d /mnt/usr/local/etc/pkg/repos/ ] && mkdir -p /mnt/usr/local/etc/pkg/repos/
cat <<-EOF > /mnt/usr/local/etc/pkg/repos/df-latest.conf
Avalon: {
        url             : https://mirror-master.dragonflybsd.org/dports/\${ABI}/LATEST,
        mirror_type     : NONE,
        signature_type  : NONE,
        pubkey          : NONE,
        fingerprints    : /usr/share/fingerprints,
        enabled         : yes
}
EOF

# The pkg command requires a valid /dev/null path, so we fake it with an
# empty file.
touch /mnt/dev/null
chroot /mnt /bin/sh -c 'ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg update'
chroot /mnt /bin/sh -c 'ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install --yes pkg'
chroot /mnt /bin/sh -c 'ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg update'
chroot /mnt /bin/sh -c 'ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install --yes gsed'
chroot /mnt /bin/sh -c 'ASSUME_ALWAYS_YES=yes FETCH_RETRY=5 pkg install --yes bash'
rm -f /mnt/dev/null

# Setup bash a valid login shell.
chroot /mnt ln /usr/local/bin/bash /usr/bin/bash
chroot /mnt ln /usr/local/bin/bash /bin/bash

cat <<-EOF >> /mnt/etc/shells
/usr/bin/bash
/bin/bash
EOF

echo 'vagrant' | chroot /mnt pw user mod root -h 0 -n root
chroot /mnt chsh -s /usr/bin/bash root
chroot /mnt pwd_mkdb /etc/master.passwd

# Modify OpenSSH to allow root logins.
sed -i -e "s/^[# ]*UseDNS.*/UseDNS no/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*UsePAM.*/UsePAM yes/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*PermitRootLogin.*/PermitRootLogin yes/g" /mnt/etc/ssh/sshd_config
sed -i -e "s/^[# ]*PasswordAuthentication.*/PasswordAuthentication yes/g" /mnt/etc/ssh/sshd_config

# Cleanly dismount the target disk.
umount /mnt/boot
umount /mnt
